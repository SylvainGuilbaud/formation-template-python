/// 
Class iris.training Extends %Persistent [ ClassType = persistent, DdlAllowed, Final, Owner = {SuperUser}, ProcedureBlock, SqlRowIdPrivate, SqlTableName = training ]
{

Property name As %Library.String(MAXLEN = 50) [ SqlColumnNumber = 2 ];

Property room As %Library.String(MAXLEN = 50) [ SqlColumnNumber = 3 ];

Parameter USEEXTENTSET = 1;


/// Populate the training table with some data
ClassMethod PopulateTraining() As %Status
{
    Set sc = $$$OK
    // Create a loop of 1000 records
    For i = 1:1:1000 {
        // Create a new instance of the class
        Set obj = ##class(iris.training).%New()
        // Set the name property to a random string
        Set obj.name = ..RandomString(10)
        // Set the room property to a random string
        Set obj.room = ..RandomString(10)
        // Save the object
        Set sc = obj.%Save()
        // If there was an error, break out of the loop
        If $$$ISERR(sc) {
            Quit
        }
    }
    Return sc
}

//RandomString function
ClassMethod RandomString(length As %Integer) As %String
{
    Set str = ""
    For i = 1:1:length {
        Set str = str_$Char(65+$Random(25))
    }
    Return str
}

/// Bitmap Extent Index auto-generated by DDL CREATE TABLE statement.  Do not edit the SqlName of this index.
Index DDLBEIndex [ Extent, SqlName = "%%DDLBEIndex", Type = bitmap ];

Storage Default
{
<Data name="trainingDefaultData">
<Value name="1">
<Value>name</Value>
</Value>
<Value name="2">
<Value>room</Value>
</Value>
</Data>
<DataLocation>^BPcb.DtvK.1</DataLocation>
<DefaultData>trainingDefaultData</DefaultData>
<ExtentLocation>^BPcb.DtvK</ExtentLocation>
<IdFunction>sequence</IdFunction>
<IdLocation>^BPcb.DtvK.1</IdLocation>
<Index name="DDLBEIndex">
<Location>^BPcb.DtvK.2</Location>
</Index>
<Index name="IDKEY">
<Location>^BPcb.DtvK.1</Location>
</Index>
<IndexLocation>^BPcb.DtvK.I</IndexLocation>
<StreamLocation>^BPcb.DtvK.S</StreamLocation>
<Type>%Storage.Persistent</Type>
}

}
